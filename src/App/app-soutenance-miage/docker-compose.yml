version: '3.8'

services:
  # Service principal - Application PHP avec Nginx
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miage-soutenance-app
    restart: unless-stopped
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www/html
      - ./var/logs/nginx:/var/log/nginx
      - ./var/logs/php:/var/log/php
      - ./var/sessions:/var/lib/php/sessions
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-universite}
      - DB_USER=${DB_USER:-miage_user}
      - DB_PASSWORD=${DB_PASSWORD:-miage_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TIMEZONE=Africa/Abidjan
    ports:
      - "8080:80"
    networks:
      - miage-network

  # Base de données MySQL
  db:
    image: mysql:8.0
    container_name: miage-soutenance-db
    restart: unless-stopped
    command: --default-time-zone='+00:00' --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/scripts/soutenance.sql:/docker-entrypoint-initdb.d/soutenance.sql
      - ./docker/config/mysql.cnf:/etc/mysql/conf.d/custom.cnf
      - ./var/logs/mysql:/var/log/mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME:-universite}
      - MYSQL_USER=${DB_USER:-miage_user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-miage_password}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root_password}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - miage-network

  # PHPMyAdmin pour la gestion de la base de données
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: miage-soutenance-phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_USER=${DB_USER:-miage_user}
      - PMA_PASSWORD=${DB_PASSWORD:-miage_password}
      - UPLOAD_LIMIT=${UPLOAD_MAX_SIZE:-20M}
      - TZ=Africa/Abidjan
    ports:
      - "8081:80"
    networks:
      - miage-network

  # Redis pour les sessions et le cache
  redis:
    image: redis:alpine
    container_name: miage-soutenance-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - miage-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  miage-network:
    driver: bridge