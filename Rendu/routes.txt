
/***********************************************************************************
 * Fichier: routes\web.php
 ***********************************************************************************/

<?php
// routes/web.php

use App\Config\Router;
use App\Config\Container;
use App\Backend\Controller\BaseController;
use App\Backend\Service\Securite\ServiceSecuriteInterface;

// Import des classes de contrôleurs
use App\Backend\Controller\{
    HomeController, AuthentificationController, DashboardController, AssetController
};
use App\Backend\Controller\Administration\{
    AdminDashboardController, ConfigurationController, SupervisionController, UtilisateurController
};
use App\Backend\Controller\Commission\{
    CommissionDashboardController, WorkflowCommissionController
};
use App\Backend\Controller\Etudiant\{
    EtudiantDashboardController, ProfilEtudiantController, RapportController
};
use App\Backend\Controller\PersonnelAdministratif\{
    PersonnelDashboardController, ScolariteController
};

// --- Définition des Middlewares ---

Router::middleware('auth', function(Container $container) {
    /** @var ServiceSecuriteInterface $securiteService */
    $securiteService = $container->get(ServiceSecuriteInterface::class);
    if (!$securiteService->estUtilisateurConnecte()) {
        $container->get(BaseController::class)->addFlashMessage('warning', 'Veuillez vous connecter pour accéder à cette page.');
        $container->get(BaseController::class)->redirect('/login');
    }
});

Router::middleware('admin', function(Container $container) {
    /** @var ServiceSecuriteInterface $securiteService */
    $securiteService = $container->get(ServiceSecuriteInterface::class);
    if (!$securiteService->utilisateurPossedePermission('TRAIT_ADMIN_DASHBOARD_ACCEDER')) {
        $container->get(BaseController::class)->renderError(403, 'Accès refusé. Vous n\'avez pas les droits d\'administrateur.');
    }
});

Router::middleware('etudiant', function(Container $container) {
    /** @var ServiceSecuriteInterface $securiteService */
    $securiteService = $container->get(ServiceSecuriteInterface::class);
    $user = $securiteService->getUtilisateurConnecte();
    if (!$user || $user['id_groupe_utilisateur'] !== 'GRP_ETUDIANT') {
        $container->get(BaseController::class)->renderError(403, 'Accès refusé. Cette section est réservée aux étudiants.');
    }
});

Router::middleware('personnel', function(Container $container) {
    /** @var ServiceSecuriteInterface $securiteService */
    $securiteService = $container->get(ServiceSecuriteInterface::class);
    $user = $securiteService->getUtilisateurConnecte();
    if (!$user || !in_array($user['id_groupe_utilisateur'], ['GRP_PERS_ADMIN', 'GRP_RS', 'GRP_AGENT_CONFORMITE'])) {
        $container->get(BaseController::class)->renderError(403, 'Accès refusé. Cette section est réservée au personnel administratif.');
    }
});

Router::middleware('commission', function(Container $container) {
    /** @var ServiceSecuriteInterface $securiteService */
    $securiteService = $container->get(ServiceSecuriteInterface::class);
    $user = $securiteService->getUtilisateurConnecte();
    if (!$user || !in_array($user['id_groupe_utilisateur'], ['GRP_COMMISSION', 'GRP_ENSEIGNANT'])) {
        $container->get(BaseController::class)->renderError(403, 'Accès refusé. Cette section est réservée aux membres de la commission.');
    }
});

// --- Définition des Routes ---

// 1. Routes Publiques
Router::get('/', [HomeController::class, 'index']);

// 2. Routes d'Authentification
Router::get('/login', [AuthentificationController::class, 'showLoginForm']);
Router::post('/login', [AuthentificationController::class, 'handleLogin']);
Router::post('/logout', [AuthentificationController::class, 'logout']);
Router::get('/forgot-password', [AuthentificationController::class, 'showForgotPasswordForm']);
Router::post('/forgot-password', [AuthentificationController::class, 'handleForgotPassword']);
Router::get('/reset-password/{token}', [AuthentificationController::class, 'showResetPasswordForm']);
Router::post('/reset-password', [AuthentificationController::class, 'handleResetPassword']);
Router::get('/validate-email/{token}', [AuthentificationController::class, 'validateEmail']);
Router::get('/2fa', [AuthentificationController::class, 'show2faForm']);
Router::post('/2fa', [AuthentificationController::class, 'handle2faVerification']);

// 3. Routes pour les Assets Protégés
Router::get('/assets/protected/{type}/{filename}', [AssetController::class, 'serveProtectedFile']);

// 4. Routes Protégées (nécessitent une authentification)
Router::group(['middleware' => 'auth'], function() {

    Router::get('/dashboard', [DashboardController::class, 'index']);

    // 4.1. Routes du Module Étudiant
    Router::group(['middleware' => 'etudiant'], function() {
        Router::get('/etudiant/dashboard', [EtudiantDashboardController::class, 'index']);
        // ...
    });

    // 4.2. Routes du Module Personnel Administratif
    Router::group(['middleware' => 'personnel'], function() {
        Router::get('/personnel/dashboard', [PersonnelDashboardController::class, 'index']);
        // ...
    });

    // 4.3. Routes du Module Commission
    Router::group(['middleware' => 'commission'], function() {
        Router::get('/commission/dashboard', [CommissionDashboardController::class, 'index']);
        // ...
    });

    // 4.4. Routes du Module Administrateur Système
    Router::group(['middleware' => 'admin'], function() {
        Router::get('/admin/dashboard', [AdminDashboardController::class, 'index']);
        Router::get('/admin/configuration', [ConfigurationController::class, 'showConfigurationPage']);
        // ...
    });
});
