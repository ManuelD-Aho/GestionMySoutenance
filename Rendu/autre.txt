
/***********************************************************************************
 * Fichier: .dockerignore
 ***********************************************************************************/

# .dockerignore

# Fichiers de contrôle de version
.git
.gitignore
.gitattributes
.github/

# Fichiers d'environnement (très important de ne pas les inclure dans l'image)
.env.prod
.env.example

# Dépendances Composer (seront installées DANS le conteneur)
vendor/
composer.phar

# Fichiers de configuration Docker spécifiques au développement local
docker-compose.dev.yml
docker-compose.prod.yml

# Fichiers de log, cache, uploads (générés par l'application, non nécessaires dans l'image)
var/cache/
var/log/
Public/uploads/

# Fichiers de documentation ou de projet non nécessaires au runtime
README.md
Fonction.md
Commande.txt
.vscode/
.idea/
*.sql # mysoutenance.sql est utilisé pour l'initialisation de la DB, pas pour le build de l'app
*.log

/***********************************************************************************
 * Fichier: .env
 ***********************************************************************************/

APP_ENV=development
APP_PORT=8080

# Database for local development
DB_HOST=db
DB_PORT=3306
DB_DATABASE=mysoutenance
DB_USER=root
DB_PASSWORD=root123

# MySQL root password for Docker Compose
MYSQL_ROOT_PASSWORD=root123

# PhpMyAdmin port
PMA_PORT=8081

# Session configuration
SESSION_LIFETIME=3600
SESSION_DOMAIN=localhost

# SMTP for local development (MailHog or similar)
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_AUTH=false
SMTP_USER=
SMTP_PASS=
SMTP_SECURE=
MAIL_FROM_ADDRESS=no-reply@gestionsoutenance.dev
MAIL_FROM_NAME=GestionMySoutenanceDev

/***********************************************************************************
 * Fichier: .env.dev
 ***********************************************************************************/

APP_ENV=development
APP_PORT=8080

# Database for local development
DB_HOST=db
DB_PORT=3306
DB_DATABASE=mysoutenance
DB_USER=root
DB_PASSWORD=root123

# MySQL root password for Docker Compose
MYSQL_ROOT_PASSWORD=root123
APP_URL=http://localhost:8080
# PhpMyAdmin port
PMA_PORT=8081
UPLOADS_PATH_BASE=/var/www/html/Public/uploads/

# Session configuration
SESSION_LIFETIME=3600
SESSION_DOMAIN=localhost

# SMTP for local development (MailHog or similar)
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_AUTH=false
SMTP_USER=
SMTP_PASS=
SMTP_SECURE=
MAIL_FROM_ADDRESS=no-reply@gestionsoutenance.dev
MAIL_FROM_NAME=GestionMySoutenanceDev

/***********************************************************************************
 * Fichier: .env.example
 ***********************************************************************************/

APP_ENV=development
APP_PORT=8080

DB_HOST=db
DB_PORT=3306
DB_DATABASE=mysoutenance
DB_USER=root
DB_PASSWORD=root123

MYSQL_ROOT_PASSWORD=root123

PMA_PORT=8081

SESSION_LIFETIME=3600
SESSION_DOMAIN=localhost

# SMTP configuration (placeholders)
SMTP_HOST=
SMTP_PORT=
SMTP_AUTH=
SMTP_USER=
SMTP_PASS=
SMTP_SECURE=
MAIL_FROM_ADDRESS=
MAIL_FROM_NAME=

/***********************************************************************************
 * Fichier: .env.prod
 ***********************************************************************************/

APP_ENV=production
APP_PORT=80
DB_HOST=db_prod
DB_PORT=3306
DB_DATABASE=mysoutoutenance
DB_USER=
DB_PASSWORD=
SESSION_LIFETIME=3600
SESSION_DOMAIN=gestionmysoutenance.live
SMTP_HOST=smtp.zoho.com
SMTP_PORT=587
SMTP_AUTH=true
SMTP_USER=no-reply@gestionmysoutenance.live
SMTP_PASS=
SMTP_SECURE=tls
MAIL_FROM_ADDRESS=no-reply@gestionmysoutenance.live
MAIL_FROM_NAME=GestionMySoutenance

/***********************************************************************************
 * Fichier: .gitignore
 ***********************************************************************************/

# Ignorer les fichiers d'environnement spécifiques
.env
.env.dev
.env.prod
.env.example

# Ignorer les fichiers de logs
*.log

# Ignorer les fichiers de base de données
*.sql
*.sqlite

# Ignorer les fichiers de sauvegarde et temporaires
*.bak
*.tmp

# Ignorer les fichiers et dossiers spécifiques à macOS
.DS_Store
Thumbs.db

# Ignorer les fichiers et dossiers spécifiques à l'IDE
.idea/
.vscode/

# Ignorer les dépendances Composer
composer.phar
/vendor/
/node_modules/
# Ignorer les assets générés ou les caches
/Public/assets/css/bulma/
/Public/uploads/
/var/cache/
/var/log/

# Ignorer les fichiers Docker spécifiques au développement


/***********************************************************************************
 * Fichier: .gitignore.dev
 ***********************************************************************************/

# Règles spécifiques au développement
# (Peut être vide si toutes les règles sont dans .gitignore)

/***********************************************************************************
 * Fichier: .gitignore.prod
 ***********************************************************************************/

# Règles spécifiques à la production
# (Peut être vide si toutes les règles sont dans .gitignore)

/***********************************************************************************
 * Fichier: composer.json
 ***********************************************************************************/

{
  "name": "mysoutenance/app",
  "description": "Application de gestion de soutenances",
  "type": "project",
  "require": {
    "php": "^8.2",
    "ext-pdo": "*",
    "ext-mysqli": "*",
    "ext-mbstring": "*",
    "ext-ctype": "*",
    "ext-json": "*",
    "ext-intl": "*",
    "ext-gd": "*",
    "ext-zip": "*",
    "vlucas/phpdotenv": "^5.6",
    "nikic/fast-route": "^1.3",
    "phpmailer/phpmailer": "^6.9",
    "robthree/twofactorauth": "^2.1",
    "bacon/bacon-qr-code": "^2.0.8",
    "tecnickcom/tcpdf": "^6.7",
    "phpoffice/phpspreadsheet": "^2.1",
    "monolog/monolog": "^3.5",
    "ext-fileinfo": "*",
    "ext-iconv": "*"
  },
  "require-dev": {
    "phpunit/phpunit": "^9.6"
  },
  "autoload": {
    "psr-4": {
      "App\\": "src/"
    }
  },
  "scripts": {
    "test": "phpunit",
    "post-install-cmd": [
      "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
      "@php -r \"file_exists('.env.dev') || copy('.env.example', '.env.dev');\""
    ],
    "post-autoload-dump": [
      "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
      "@php -r \"file_exists('.env.dev') || copy('.env.example', '.env.dev');\""
    ]
  },
  "config": {
    "optimize-autoloader": true,
    "preferred-install": "dist",
    "sort-packages": true,
    "platform": {
      "php": "8.2.0"
    }
  },
  "minimum-stability": "stable",
  "prefer-stable": true
}

/***********************************************************************************
 * Fichier: docker-compose.dev.yml
 ***********************************************************************************/

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: gestionmysoutenance_app_dev
    volumes:
      - ./src:/var/www/html/src
      - ./Public:/var/www/html/Public
      - ./routes:/var/www/html/routes
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini
      - app_dev_uploads:/var/www/html/Public/uploads
      - app_dev_logs:/var/www/html/var/log
      - app_dev_cache:/var/www/html/var/cache
    env_file:
      - .env.dev
    environment:
      # La valeur 'soutenance_docker' doit correspondre EXACTEMENT
      # au nom que vous avez donné au serveur dans votre IDE.
      - PHP_IDE_CONFIG=serverName=localhost
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: gestionmysoutenance_nginx_dev
    ports:
      - "0.0.0.0:8080:80"
    volumes:
      - ./Public:/var/www/html/Public:ro
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.3
    container_name: gestionmysoutenance_db_dev
    restart: unless-stopped
    command: --default-authentication-plugin=caching_sha2_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_dev_data:/var/lib/mysql
      - ./mysoutenance.sql:/docker-entrypoint-initdb.d/mysoutenance.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env.dev
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gestionmysoutenance_pma_dev
    restart: unless-stopped
    ports:
      - "0.0.0.0:8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: 128M
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.dev
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: gestionmysoutenance_mailhog_dev
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_dev_data:
    driver: local
  app_dev_uploads:
    driver: local
  app_dev_logs:
    driver: local
  app_dev_cache:
    driver: local

/***********************************************************************************
 * Fichier: docker-compose.prod.yml
 ***********************************************************************************/

services:
  # Service PHP-FPM (image de production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: final # Cible le stage 'final' (production) de notre Dockerfile
    container_name: gestionmysoutenance_app_prod
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - DB_HOST=db_prod # Nom du service de la base de données de production (pour test local)
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_AUTH=${SMTP_AUTH}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_SECURE=${SMTP_SECURE}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    networks:
      - app-network

  # Service Webserver NGINX (pour la production)
  webserver:
    image: nginx:alpine
    container_name: gestionmysoutenance_nginx_prod
    ports:
      - "80:80" # Expose le port 80 pour la production
    volumes:
      - ./Public:/var/www/html/Public:ro # Montage en lecture seule pour Nginx
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  # Service Base de Données MySQL (pour le test de production local)
  db_prod: # Nom différent pour éviter les conflits avec 'db' du dev
    image: mysql:8.3
    container_name: gestionmysoutenance_db_prod
    restart: unless-stopped
    command: --default-authentication-plugin=caching_sha2_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_prod_data:/var/lib/mysql # Volume persistant pour les données de prod
      - ./mysoutenance.sql:/docker-entrypoint-initdb.d/mysoutenance.sql # Initialisation de la DB
    ports:
      - "3307:3306" # Expose sur un port différent pour éviter les conflits avec le dev DB
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_prod_data:
    driver: local

/***********************************************************************************
 * Fichier: Dockerfile
 ***********************************************************************************/

# Dockerfile
FROM php:8.2-fpm AS base

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    unzip \
    zip \
    libzip-dev \
    libicu-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
        ctype \
        gd \
        intl \
        mbstring \
        mysqli \
        opcache \
        pdo \
        pdo_mysql \
        zip \
        fileinfo

COPY --from=composer:2.7.7 /usr/bin/composer /usr/bin/composer

WORKDIR /app

# ==============================================================================
FROM base AS builder

COPY composer.json composer.lock ./
COPY package.json package-lock.json ./

RUN composer install --no-interaction --no-scripts --prefer-dist --optimize-autoloader
RUN npm install

COPY . .

RUN npm run build

# ==============================================================================
FROM builder AS dev

WORKDIR /var/www/html

COPY --from=builder /app .

RUN pecl install xdebug && docker-php-ext-enable xdebug

RUN mkdir -p /var/www/html/var/cache /var/www/html/var/log /var/lib/php/sessions /var/log && \
    touch /var/log/xdebug.log && \
    chown -R www-data:www-data /var/www/html && \
    chown -R www-data:www-data /var/lib/php/sessions && \
    chown -R www-data:www-data /var/log && \
    chmod -R 777 /var/www/html/var && \
    chmod -R 777 /var/log

EXPOSE 9000
CMD ["php-fpm"]

# ==============================================================================
FROM php:8.2-fpm-alpine AS final

WORKDIR /var/www/html

RUN apk add --no-cache \
    libzip-dev \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    libxml2-dev \
    libintl \
    icu-dev \
    oniguruma-dev \
    && docker-php-ext-install -j$(nproc) pdo_mysql zip gd intl mbstring fileinfo \
    && rm -rf /var/cache/apk/*

COPY --from=builder /app/src/ /var/www/html/src/
COPY --from=builder /app/Public/ /var/www/html/Public/
COPY --from=builder /app/routes/ /var/www/html/routes/
COPY --from=builder /app/templates/ /var/www/html/templates/
COPY --from=builder /app/composer.json /var/www/html/composer.json

RUN composer install --no-interaction --no-dev --no-scripts --optimize-autoloader

RUN mkdir -p /var/www/html/var/cache /var/www/html/var/log /var/lib/php/sessions && \
    chown -R www-data:www-data /var/www/html && \
    chown -R www-data:www-data /var/lib/php/sessions && \
    chmod -R 775 /var/www/html/var

USER www-data

EXPOSE 9000
CMD ["php-fpm"]

/***********************************************************************************
 * Fichier: generate_project_structure.php
 ***********************************************************************************/



/***********************************************************************************
 * Fichier: package.json
 ***********************************************************************************/

{
  "name": "gestionsoutenance-frontend",
  "version": "1.0.0",
  "description": "Dépendances et scripts pour le frontend de GestionMySoutenance",
  "scripts": {
    "build": "postcss src/css/input.css -o Public/assets/css/app.css",
    "watch": "postcss src/css/input.css -o Public/assets/css/app.css --watch"
  },
  "author": "ManuelD-Aho",
  "license": "ISC",
  "devDependencies": {
    "autoprefixer": "^10.4.19",
    "cssnano": "^7.0.1",
    "postcss": "^8.4.38",
    "postcss-cli": "^11.0.0",
    "postcss-import": "^16.1.1",
    "tailwindcss": "^3.4.3"
  },
  "dependencies": {
    "bulma": "^1.0.0",
    "daisyui": "^4.11.1",
    "gsap": "^3.12.5"
  }
}


/***********************************************************************************
 * Fichier: php.ini
 ***********************************************************************************/

[PHP]
display_errors = Off
display_startup_errors = Off
error_reporting = E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED
log_errors = On
error_log = /var/log/php_errors.log

[Date]
date.timezone = Europe/Paris

[Session]
session.save_handler = files
session.save_path = "/var/lib/php/sessions"
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 3600

[Upload]
upload_max_filesize = 32M
post_max_size = 32M
max_file_uploads = 20

[Memory]
memory_limit = 128M

[OPcache]
opcache.enable = 1
opcache.memory_consumption = 64
opcache.max_accelerated_files = 4000
opcache.revalidate_freq = 60

/***********************************************************************************
 * Fichier: postcss.config.js
 ***********************************************************************************/

module.exports = {
  plugins: {
    'postcss-import': {}, // Doit être le premier plugin
    tailwindcss: {},
    autoprefixer: {},
  },
}

/***********************************************************************************
 * Fichier: render.yaml
 ***********************************************************************************/



/***********************************************************************************
 * Fichier: Seeder.php
 ***********************************************************************************/

<?php
// Seeder.php

// Définir ROOT_PATH si non déjà défini (par exemple, dans index.php ou un autre fichier d'entrée)
if (!defined('ROOT_PATH')) {
    define('ROOT_PATH', __DIR__);
}

require_once ROOT_PATH . '/vendor/autoload.php';

use Dotenv\Dotenv;
use App\Config\Container;
use App\Backend\Service\Utilisateur\ServiceUtilisateurInterface;
use App\Backend\Service\ParcoursAcademique\ServiceParcoursAcademiqueInterface;
use App\Backend\Service\WorkflowSoutenance\ServiceWorkflowSoutenanceInterface;
use App\Backend\Service\Document\ServiceDocumentInterface;
use App\Backend\Service\Communication\ServiceCommunicationInterface;
use App\Backend\Service\Systeme\ServiceSystemeInterface;
use App\Backend\Exception\DoublonException;
use App\Backend\Exception\OperationImpossibleException;

// Charger les variables d'environnement
$dotenv = Dotenv::createImmutable(ROOT_PATH, '.env.dev');
$dotenv->load();

echo "=================================================\n";
echo " Démarrage du Seeder de \"GestionMySoutenance\" \n";
echo " Peuplement complet de la base de données (Contexte Afrique)\n";
echo "=================================================\n\n";

try {
    $container = new Container();
    $pdo = $container->get('PDO'); // Get the PDO instance for manual transaction control if needed

    /** @var ServiceUtilisateurInterface $serviceUtilisateur */
    $serviceUtilisateur = $container->get(ServiceUtilisateurInterface::class);
    /** @var ServiceParcoursAcademiqueInterface $serviceParcoursAcademique */
    $serviceParcoursAcademique = $container->get(ServiceParcoursAcademiqueInterface::class);
    /** @var ServiceWorkflowSoutenanceInterface $serviceWorkflowSoutenance */
    $serviceWorkflowSoutenance = $container->get(ServiceWorkflowSoutenanceInterface::class);
    /** @var ServiceDocumentInterface $serviceDocument */
    $serviceDocument = $container->get(ServiceDocumentInterface::class);
    /** @var ServiceCommunicationInterface $serviceCommunication */
    $serviceCommunication = $container->get(ServiceCommunicationInterface::class);
    /** @var ServiceSystemeInterface $serviceSysteme */
    $serviceSysteme = $container->get(ServiceSystemeInterface::class);

    // Set communication service in ServiceUtilisateur (it needs it for emails)
    $serviceUtilisateur->setCommunicationService($serviceCommunication);

    // --- 0. Pré-nettoyage des données pour éviter les doublons (pour les tests de seeding répétés) ---
    // C'est une mesure de sécurité si vous lancez le seeder plusieurs fois sans down -v
    // Dans un vrai script de seeding, down -v est suffisant.
    echo "0. Vérification et nettoyage initial...\n";
    try {
        $pdo->exec("DELETE FROM sessions WHERE user_id IS NOT NULL");
        $pdo->exec("DELETE FROM historique_mot_de_passe");
        $pdo->exec("DELETE FROM vote_commission");
        $pdo->exec("DELETE FROM affecter");
        $pdo->exec("DELETE FROM conformite_rapport_details");
        $pdo->exec("DELETE FROM approuver");
        $pdo->exec("DELETE FROM section_rapport");
        $pdo->exec("DELETE FROM pv_session_rapport");
        $pdo->exec("DELETE FROM compte_rendu");
        $pdo->exec("DELETE FROM session_rapport");
        $pdo->exec("DELETE FROM session_validation");
        $pdo->exec("DELETE FROM rapport_etudiant");
        $pdo->exec("DELETE FROM inscrire");
        $pdo->exec("DELETE FROM etudiant");
        $pdo->exec("DELETE FROM enseignant");
        $pdo->exec("DELETE FROM personnel_administratif");
        $pdo->exec("DELETE FROM utilisateur");
        $pdo->exec("UPDATE sequences SET valeur_actuelle = 0"); // Réinitialiser les séquences

        // Insérer ou mettre à jour l'année académique active si elle n'existe pas ou n'est pas active
        $anneeAcademiqueLibelle = '2025-2026';
        $idAnnee = 'ANNEE-2025-2026';
        $annee = $serviceSysteme->lireAnneeAcademique($idAnnee);
        if (!$annee) {
            $serviceSysteme->creerAnneeAcademique($anneeAcademiqueLibelle, '2025-09-01', '2026-08-31', true);
            echo "   -> Année académique {$anneeAcademiqueLibelle} créée et activée.\n";
        } elseif ($annee['est_active'] == 0) {
            $serviceSysteme->setAnneeAcademiqueActive($idAnnee);
            echo "   -> Année académique {$anneeAcademiqueLibelle} activée.\n";
        } else {
            echo "   -> Année académique {$anneeAcademiqueLibelle} déjà active.\n";
        }
    } catch (Exception $e) {
        echo "   -> Avertissement: Problème lors du nettoyage initial. Cela peut indiquer des FKs ou des données existantes: " . $e->getMessage() . "\n";
    }

    echo "\n-------------------------------------------------\n";
    echo "1. Scénario 1 : Le Parcours de l'Étudiant (Sophie Martin)\n";
    echo "-------------------------------------------------\n";

    // 1.1. Intégration et Configuration du Compte
    echo "1.1. Intégration et Configuration du Compte (Sophie Martin)\n";
    $sophieMartinProfile = [
        'nom' => 'Martin',
        'prenom' => 'Sophie',
        'date_naissance' => '2002-05-15',
        'lieu_naissance' => 'Douala',
        'pays_naissance' => 'Cameroun',
        'nationalite' => 'Camerounaise',
        'sexe' => 'Féminin',
        'adresse_postale' => '12 Rue des Flamboyants',
        'ville' => 'Yaoundé',
        'code_postal' => 'BP 123',
        'telephone' => '+237677889900',
        'email_contact_secondaire' => 'sophie.martin.secondaire@example.com',
        'contact_urgence_nom' => 'Jean Martin',
        'contact_urgence_telephone' => '+237699001122',
        'contact_urgence_relation' => 'Père'
    ];
    $sophieMartinId = $serviceUtilisateur->creerEntite('etudiant', $sophieMartinProfile);
    echo "   - Entité Étudiant 'Sophie Martin' créée avec l'ID: {$sophieMartinId}\n";

    $sophieMartinAccount = [
        'login_utilisateur' => 'sophie.martin',
        'email_principal' => 'sophie.martin@example.com',
        'mot_de_passe' => 'Motdepasse@123', // Mdp temporaire
        'id_niveau_acces_donne' => 'ACCES_PERSONNEL',
        'id_groupe_utilisateur' => 'GRP_ETUDIANT',
        'statut_compte' => 'actif', // Simuler l'activation par le RS
        'email_valide' => 1, // Simuler la validation d'email
    ];
    $serviceUtilisateur->activerComptePourEntite($sophieMartinId, $sophieMartinAccount, false);
    echo "   - Compte 'sophie.martin' activé et email validé.\n";

    // Simuler l'inscription (nécessite Niveau d'Étude, Statut Paiement)
    // On doit ajouter ces données de référence si elles ne sont pas déjà dans mysoutenance.sql
    // Pour cet exemple, je suppose qu'elles sont déjà là ou seront insérées manuellement si le seeder plante.
    $idNiveauMaster2 = 'NIV_M2';
    $idStatutPaiementOK = 'PAIE_OK';
    $serviceSysteme->gererReferentiel('create', 'niveau_etude', null, ['id_niveau_etude' => $idNiveauMaster2, 'libelle_niveau_etude' => 'Master 2']);
    $serviceSysteme->gererReferentiel('create', 'statut_paiement_ref', null, ['id_statut_paiement' => $idStatutPaiementOK, 'libelle_statut_paiement' => 'Paiement Effectué']);
    echo "   - Données de référence Niveau_Etude et Statut_Paiement ajoutées/vérifiées.\n";

    $inscriptionId = $serviceParcoursAcademique->creerInscription([
        'numero_carte_etudiant' => $sophieMartinId,
        'id_niveau_etude' => $idNiveauMaster2,
        'id_annee_academique' => $idAnnee,
        'montant_inscription' => 150000.00, // CFA
        'date_inscription' => date('Y-m-d H:i:s', strtotime('-6 months')),
        'id_statut_paiement' => $idStatutPaiementOK,
        'date_paiement' => date('Y-m-d H:i:s', strtotime('-5 months')),
        'numero_recu_paiement' => $serviceSysteme->genererIdentifiantUnique('REC')
    ]);
    echo "   - Inscription de Sophie Martin pour l'année {$anneeAcademiqueLibelle} créée.\n";

    // Simuler l'enregistrement et validation du stage
    $entrepriseId = $serviceSysteme->genererIdentifiantUnique('ENT');
    $serviceSysteme->gererReferentiel('create', 'entreprise', null, [
        'id_entreprise' => $entrepriseId,
        'libelle_entreprise' => 'AfriTech Solutions',
        'secteur_activite' => 'Informatique',
        'adresse_entreprise' => '10 Rue de l\'Innovation, Yaoundé',
        'contact_nom' => 'Mme Diallo',
        'contact_email' => 'contact@afritech.com',
        'contact_telephone' => '+237222334455'
    ]);
    echo "   - Entreprise 'AfriTech Solutions' créée.\n";

    $serviceParcoursAcademique->creerStage([
        'id_entreprise' => $entrepriseId,
        'numero_carte_etudiant' => $sophieMartinId,
        'date_debut_stage' => '2025-01-15',
        'date_fin_stage' => '2025-06-15',
        'sujet_stage' => 'Développement d\'une plateforme de gestion de projets agile',
        'nom_tuteur_entreprise' => 'Mme Diallo'
    ]);
    echo "   - Stage de Sophie Martin créé.\n";
    $serviceParcoursAcademique->validerStage($sophieMartinId, $entrepriseId);
    echo "   - Stage de Sophie Martin validé par la scolarité.\n";


    // 1.2. Rédaction et Soumission du Rapport
    echo "\n1.2. Rédaction et Soumission du Rapport (Sophie Martin)\n";
    $rapportMetadonnees = [
        'libelle_rapport_etudiant' => 'Optimisation des Processus de Soutenance: Étude de Cas d\'une Implémentation Agile',
        'theme' => 'Gestion de Projet et Digitalisation',
        'resume' => '<p>Ce rapport explore les méthodologies agiles appliquées à l\'optimisation des processus de soutenance académiques...</p>',
        'nombre_pages' => 75
    ];
    $rapportSections = [
        'Introduction' => '<p>L\'introduction présente le contexte du stage et les objectifs du rapport.</p>',
        'Contexte de l\'Entreprise' => '<p>AfriTech Solutions est un leader en innovation logicielle en Afrique...</p>',
        'Problématique et Objectifs' => '<p>La gestion traditionnelle des soutenances posait des défis...</p>',
        'Méthodologie Agile Adoptée' => '<p>Nous avons implémenté Scrum et Kanban...</p>',
        'Analyse des Résultats' => '<p>Les bénéfices incluent une réduction des délais de 20%...</p>',
        'Conclusion et Perspectives' => '<p>En conclusion, l\'approche agile est viable pour l\'académique...</p>',
        'Bibliographie' => '<p>Référence 1, Référence 2...</p>'
    ];
    $rapportId = $serviceWorkflowSoutenance->creerOuMettreAJourBrouillon($sophieMartinId, $rapportMetadonnees, $rapportSections);
    echo "   - Brouillon du rapport de Sophie Martin créé/mis à jour avec l'ID: {$rapportId}\n";

    $serviceWorkflowSoutenance->soumettreRapport($rapportId, $sophieMartinId);
    echo "   - Rapport de Sophie Martin soumis. Statut: RAP_SOUMIS.\n";

    // 1.3. Cycle de Correction et de Validation
    echo "\n1.3. Cycle de Correction et de Validation\n";
    // Création de l'Agent de Conformité
    $agentConformiteProfile = [
        'nom' => 'Conformiste',
        'prenom' => 'Cécile',
        'telephone_professionnel' => '+237688776655',
        'email_professionnel' => 'cecile.conformiste.pro@example.com'
    ];
    $agentConformiteId = $serviceUtilisateur->creerEntite('personnel', $agentConformiteProfile);
    $agentConformiteAccount = [
        'login_utilisateur' => 'agent.conformite',
        'email_principal' => 'cecile.conformiste@example.com',
        'mot_de_passe' => 'Personnel@2025',
        'id_niveau_acces_donne' => 'ACCES_DEPARTEMENT',
        'id_groupe_utilisateur' => 'GRP_AGENT_CONFORMITE',
        'statut_compte' => 'actif',
        'email_valide' => 1,
    ];
    $serviceUtilisateur->activerComptePourEntite($agentConformiteId, $agentConformiteAccount, false);
    echo "   - Agent de Conformité 'Cécile Conformiste' créé avec l'ID: {$agentConformiteId}\n";

    // Traitement de la vérification de conformité par l'agent
    $conformiteChecklist = [
        ['id' => 'PAGE_GARDE', 'statut' => 'Conforme', 'commentaire' => ''],
        ['id' => 'PRESENCE_RESUME', 'statut' => 'Conforme', 'commentaire' => ''],
        ['id' => 'PAGINATION', 'statut' => 'Non Conforme', 'commentaire' => 'Pagination commence trop tôt.'],
        ['id' => 'BIBLIO_FORMAT', 'statut' => 'Conforme', 'commentaire' => ''],
        ['id' => 'VALIDITE_STAGE', 'statut' => 'Conforme', 'commentaire' => 'Stage validé par RS.']
    ];
    $serviceWorkflowSoutenance->traiterVerificationConformite($rapportId, $agentConformiteId, false, $conformiteChecklist, 'Des ajustements de mise en page sont nécessaires, notamment la pagination.');
    echo "   - Rapport de Sophie Martin jugé NON Conforme par l'agent. Statut: RAP_NON_CONF.\n";

    // Simuler corrections et re-soumission
    $rapportSections['Introduction'] = '<p>L\'introduction a été révisée pour mieux clarifier le cadre. La pagination a été ajustée.</p>';
    $serviceWorkflowSoutenance->soumettreCorrections($rapportId, $sophieMartinId, $rapportSections, 'Ajustement de la pagination et clarification de l\'introduction.');
    echo "   - Sophie Martin a soumis ses corrections. Statut: RAP_VALID (simulé après corrections).\n";


    echo "\n-------------------------------------------------\n";
    echo "2. Scénario 2 : Le Travail du Personnel Administratif\n";
    echo "-------------------------------------------------\n";

    // Création du Responsable Scolarité (Si pas déjà fait)
    $rsProfileData = [
        'nom' => 'Scolaris',
        'prenom' => 'Marc',
        'telephone_professionnel' => '0987654321',
        'email_professionnel' => 'marc.scolaris.pro@example.com',
        'date_affectation_service' => '2020-01-01',
        'responsabilites_cles' => 'Gestion inscriptions, notes, stages, pénalités.'
    ];
    $rsId = $serviceUtilisateur->creerEntite('personnel', $rsProfileData);
    $rsAccountData = [
        'login_utilisateur' => 'pers.rs',
        'email_principal' => 'marc.scolaris@example.com',
        'mot_de_passe' => 'Personnel@2025',
        'id_niveau_acces_donne' => 'ACCES_DEPARTEMENT',
        'id_groupe_utilisateur' => 'GRP_RS',
        'statut_compte' => 'actif',
        'email_valide' => 1,
    ];
    $serviceUtilisateur->activerComptePourEntite($rsId, $rsAccountData, false);
    echo "2.1. Responsable Scolarité 'Marc Scolaris' créé avec l'ID: {$rsId}\n";

    // Simuler la saisie de notes pour Sophie
    $idUE1 = 'UE_FOND'; $idECUE1 = 'ECUE_MATH';
    $idUE2 = 'UE_APPL'; $idECUE2 = 'ECUE_INFO';

    $serviceSysteme->gererReferentiel('create', 'ue', null, ['id_ue' => $idUE1, 'libelle_ue' => 'Fondamentaux Scientifiques', 'credits_ue' => 10]);
    $serviceSysteme->gererReferentiel('create', 'ecue', null, ['id_ecue' => $idECUE1, 'libelle_ecue' => 'Mathématiques Appliquées', 'id_ue' => $idUE1, 'credits_ecue' => 5]);
    $serviceSysteme->gererReferentiel('create', 'ue', null, ['id_ue' => $idUE2, 'libelle_ue' => 'Applications Numériques', 'credits_ue' => 15]);
    $serviceSysteme->gererReferentiel('create', 'ecue', null, ['id_ecue' => $idECUE2, 'libelle_ecue' => 'Programmation Avancée', 'id_ue' => $idUE2, 'credits_ecue' => 8]);
    echo "   - Données de référence UE/ECUE ajoutées/vérifiées.\n";

    $serviceParcoursAcademique->creerOuMettreAJourNote([
        'numero_carte_etudiant' => $sophieMartinId,
        'id_ecue' => $idECUE1,
        'id_annee_academique' => $idAnnee,
        'note' => 14.5
    ]);
    $serviceParcoursAcademique->creerOuMettreAJourNote([
        'numero_carte_etudiant' => $sophieMartinId,
        'id_ecue' => $idECUE2,
        'id_annee_academique' => $idAnnee,
        'note' => 16.0
    ]);
    echo "   - Notes de Sophie Martin saisies par le RS.\n";

    $moyennes = $serviceParcoursAcademique->calculerMoyennes($sophieMartinId, $idAnnee);
    echo "   - Moyenne générale de Sophie Martin pour {$idAnnee}: {$moyennes['moyenne_generale']}\n";

    // Génération du bulletin de notes officiel (PDF)
    // Pour que le document PDF soit réellement créé, le chemin UPLOADS_PATH_BASE doit être configuré dans .env.dev
    // et exister dans le conteneur (voir Dockerfile permissions).
    // Exemple de chemin à ajouter dans .env.dev : UPLOADS_PATH_BASE=/var/www/html/Public/uploads/
    $bulletinId = $serviceDocument->genererBulletinNotes($sophieMartinId, $idAnnee);
    echo "   - Bulletin de notes officiel de Sophie Martin généré (ID document: {$bulletinId}).\n";

    echo "\n-------------------------------------------------\n";
    echo "3. Scénario 3 : La Délibération de la Commission\n";
    echo "-------------------------------------------------\n";

    // Création du Président de Commission
    $presidentProfile = [
        'nom' => 'Dupont',
        'prenom' => 'Jean',
        'telephone_professionnel' => '+237699887766',
        'email_professionnel' => 'jean.dupont.pro@example.com'
    ];
    $presidentId = $serviceUtilisateur->creerEntite('enseignant', $presidentProfile);
    $presidentAccount = [
        'login_utilisateur' => 'prof.dupont',
        'email_principal' => 'jean.dupont@example.com',
        'mot_de_passe' => 'Enseignant@2025',
        'id_niveau_acces_donne' => 'ACCES_TOTAL', // President often has high access
        'id_groupe_utilisateur' => 'GRP_COMMISSION',
        'statut_compte' => 'actif',
        'email_valide' => 1,
    ];
    $serviceUtilisateur->activerComptePourEntite($presidentId, $presidentAccount, false);
    echo "3.1. Président de Commission 'Jean Dupont' créé avec l'ID: {$presidentId}\n";

    // Création d'un autre membre de la commission
    $memberProfile = [
        'nom' => 'Ndiaye',
        'prenom' => 'Fatou',
        'telephone_professionnel' => '+237678123456',
        'email_professionnel' => 'fatou.ndiaye.pro@example.com'
    ];
    $memberId = $serviceUtilisateur->creerEntite('enseignant', $memberProfile);
    $memberAccount = [
        'login_utilisateur' => 'prof.ndiaye',
        'email_principal' => 'fatou.ndiaye@example.com',
        'mot_de_passe' => 'Enseignant@2025',
        'id_niveau_acces_donne' => 'ACCES_DEPARTEMENT',
        'id_groupe_utilisateur' => 'GRP_COMMISSION',
        'statut_compte' => 'actif',
        'email_valide' => 1,
    ];
    $serviceUtilisateur->activerComptePourEntite($memberId, $memberAccount, false);
    echo "   - Membre de commission 'Fatou Ndiaye' créé avec l'ID: {$memberId}\n";

    // Création d'une session de validation
    $sessionData = [
        'nom_session' => 'Session de Validation - Master 2 Juin 2025',
        'date_debut_session' => '2025-06-28 09:00:00',
        'date_fin_prevue' => '2025-06-28 17:00:00',
        'mode_session' => 'presentiel',
        'nombre_votants_requis' => 3 // President + 2 membres
    ];
    $sessionId = $serviceWorkflowSoutenance->creerSession($presidentId, $sessionData);
    echo "   - Session de validation créée par Jean Dupont avec l'ID: {$sessionId}\n";

    // Composition de la session (ajouter le rapport de Sophie)
    $serviceWorkflowSoutenance->composerSession($sessionId, [$rapportId]);
    echo "   - Rapport de Sophie Martin ajouté à la session.\n";

    // Démarrage de la session (facultatif pour le seeder)
    $serviceWorkflowSoutenance->demarrerSession($sessionId);
    echo "   - Session démarrée.\n";

    // Simulation des votes
    $serviceSysteme->gererReferentiel('create', 'decision_vote_ref', null, ['id_decision_vote' => 'VOTE_APPROUVE', 'libelle_decision_vote' => 'Approuvé']);
    $serviceSysteme->gererReferentiel('create', 'decision_vote_ref', null, ['id_decision_vote' => 'VOTE_REFUSE', 'libelle_decision_vote' => 'Refusé']);
    $serviceSysteme->gererReferentiel('create', 'decision_vote_ref', null, ['id_decision_vote' => 'VOTE_APPROUVE_RESERVE', 'libelle_decision_vote' => 'Approuvé sous réserve']);
    echo "   - Données de référence Decision_Vote ajoutées/vérifiées.\n";


    $serviceWorkflowSoutenance->enregistrerVote($rapportId, $sessionId, $presidentId, 'VOTE_APPROUVE', 'Très bon travail, bien structuré.');
    echo "   - Vote du Président Dupont enregistré (Approuvé).\n";
    $serviceWorkflowSoutenance->enregistrerVote($rapportId, $sessionId, $memberId, 'VOTE_APPROUVE', 'Analyse pertinente, mérite validation.');
    echo "   - Vote du membre Ndiaye enregistré (Approuvé).\n";
    $serviceWorkflowSoutenance->enregistrerVote($rapportId, $sessionId, $agentConformiteId, 'VOTE_APPROUVE', 'Conforme et académiquement solide.');
    echo "   - Vote de l\'Agent de Conformité (simulé comme membre) enregistré (Approuvé).\n";


    // Initiation et approbation du PV
    $pvId = $serviceWorkflowSoutenance->initierRedactionPv($sessionId, $presidentId);
    echo "   - PV de session initié par le Président Dupont avec l'ID: {$pvId}\n";
    $contenuPv = "Procès-verbal de la Session de Validation du Master 2, Juin 2025.\n";
    $contenuPv .= "Rapport de Sophie Martin: Thème 'Optimisation des Processus de Soutenance'. Décision: Approuvé à l'unanimité.\n";
    $serviceWorkflowSoutenance->mettreAJourContenuPv($pvId, $contenuPv);
    echo "   - Contenu du PV mis à jour.\n";
    $serviceWorkflowSoutenance->soumettrePvPourApprobation($pvId);
    echo "   - PV soumis pour approbation.\n";
    $serviceWorkflowSoutenance->approuverPv($pvId, $presidentId); // President approves his own PV for simplicity
    echo "   - PV approuvé par le Président Dupont.\n";

    // Génération du PV au format PDF
    $pvDocumentId = $serviceDocument->genererPvValidation($pvId);
    echo "   - PV de validation généré au format PDF (ID document: {$pvDocumentId}).\n";

    echo "\n-------------------------------------------------\n";
    echo "4. Scénario 4 : Le Contrôle de l'Administrateur Système (aho.sys)\n";
    echo "-------------------------------------------------\n";

    // Configuration de l'interface (ex: menus)
    // Les menus sont déjà dans mysoutenance.sql, mais nous pouvons simuler une modification
    $traitementListUser = 'TRAIT_ADMIN_GERER_UTILISATEURS_LISTER';
    $serviceSysteme->gererReferentiel('update', 'traitement', $traitementListUser, [
        'icone_class' => 'fas fa-users-cog',
        'url_associee' => '/admin/utilisateurs' // Correction pour coller aux routes.txt
    ]);
    echo "   - Traitement '{$traitementListUser}' mis à jour (icône, URL).\n";

    // Simuler une réclamation (pour tester la vue admin)
    $reclamationId = $serviceWorkflowSoutenance->creerReclamation(
        $sophieMartinId,
        'Problème de Notes',
        'Erreur sur la moyenne du bulletin',
        'La moyenne de mon bulletin de notes semble incorrecte pour le module de programmation avancée.'
    );
    echo "   - Réclamation créée par Sophie Martin (ID: {$reclamationId}).\n";

    // Admin peut voir les statistiques (appel simple du service)
    $adminStats = $serviceSysteme->getContainer()->get(\App\Backend\Service\Supervision\ServiceSupervisionInterface::class)->genererStatistiquesDashboardAdmin();
    echo "   - Statistiques du tableau de bord admin générées.\n";
    // var_dump($adminStats); // Décommenter pour voir les stats complètes

    echo "\n=================================================\n";
    echo " Seeding terminé avec succès pour tous les scénarios.\n";
    echo " Vérifiez votre base de données et les chemins d'uploads pour les PDFs.\n";
    echo "=================================================\n";

} catch (DoublonException $e) {
    echo "\nErreur de Doublon: " . $e->getMessage() . "\n";
    echo "Il semble que certaines données que le seeder essaie de créer existent déjà.\n";
    echo "Considérez un 'docker-compose down -v' avant de relancer le seeder pour repartir d'une base propre.\n";
} catch (OperationImpossibleException $e) {
    echo "\nErreur d'Opération Impossible: " . $e->getMessage() . "\n";
    echo "Une action métier n'a pas pu être effectuée. Vérifiez les prérequis ou les logs.\n";
} catch (Exception $e) {
    echo "\nErreur fatale inattendue lors de l'exécution du seeder: " . $e->getMessage() . "\n";
    echo "Trace: \n" . $e->getTraceAsString() . "\n"; // Afficher la trace complète
}

/***********************************************************************************
 * Fichier: tailwind.config.js
 ***********************************************************************************/

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/Frontend/views/**/*.php", // Scanne tous vos fichiers de vue
    "./Public/**/*.js", // Si vous avez du JS qui manipule des classes Tailwind
  ],
  theme: {
    extend: {
      fontFamily: {
        poppins: ['Poppins', 'sans-serif'],
        montserrat: ['Montserrat', 'sans-serif'],
      },
      keyframes: {
        'fade-in': {
          '0%': { opacity: '0', transform: 'translateY(-20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        'fade-in-up': {
          '0%': { opacity: '0', transform: 'translateY(20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        'fade-in-down': {
          '0%': { opacity: '0', transform: 'translateY(-20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        'fade-in-right': {
          '0%': { opacity: '0', transform: 'translateX(20px)' },
          '100%': { opacity: '1', transform: 'translateX(0)' },
        },
        'pulse-slow': {
          '0%, 100%': { opacity: '1' },
          '50%': { opacity: '0.7' },
        }
      },
      animation: {
        'fade-in': 'fade-in 0.5s ease-out forwards',
        'fade-in-up': 'fade-in-up 0.5s ease-out forwards',
        'fade-in-down': 'fade-in-down 0.5s ease-out forwards',
        'fade-in-right': 'fade-in-right 0.5s ease-out forwards',
        'pulse-slow': 'pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',
      }
    },
  },
  plugins: [
    require('daisyui'),
  ],
  daisyui: {
    themes: [
      {
        mytheme: {
          "primary": "#4A90E2", // Bleu vif
          "primary-focus": "#357ABD", // Bleu plus foncé au focus
          "primary-content": "#ffffff", // Texte blanc sur primaire
          "secondary": "#50C878", // Vert émeraude
          "secondary-focus": "#3BA05F",
          "secondary-content": "#ffffff",
          "accent": "#FFD700", // Or
          "accent-focus": "#E6C200",
          "accent-content": "#333333",
          "neutral": "#3D4451", // Gris foncé
          "neutral-focus": "#2A2E37",
          "neutral-content": "#ffffff",
          "base-100": "#ffffff", // Fond clair principal
          "base-200": "#F8F9FA", // Fond légèrement plus foncé
          "base-300": "#E9ECEF", // Fond encore plus foncé
          "base-content": "#333333", // Texte sombre sur fond clair
          "info": "#2094f3", // Bleu info
          "success": "#009485", // Vert succès
          "warning": "#ff9900", // Orange avertissement
          "error": "#ff5724", // Rouge erreur
          "error-content": "#ffffff", // Texte blanc sur erreur
        },
      },
      // Ajoutez d'autres thèmes si nécessaire
    ],
    darkTheme: "mytheme", // Thème par défaut pour le mode sombre
    styled: true,
    utils: true,
    prefix: "",
    logs: true,
    themeRoot: ":root",
  },
};
