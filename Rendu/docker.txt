
/***********************************************************************************
 * Fichier: docker\apache\apache-vhost.conf
 ***********************************************************************************/


<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html/Public

    <Directory /var/www/html/Public>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

/***********************************************************************************
 * Fichier: docker\nginx\conf.d\default.conf
 ***********************************************************************************/

# docker/nginx/conf.d/default.conf

server {
    # Écoute sur le port 80, le port HTTP standard.
    listen 80;
    server_name localhost;

    # Définit la racine du site web. Tous les chemins de fichiers seront relatifs à ce répertoire.
    # Il doit pointer vers le dossier qui contient votre index.php.
    root /var/www/html/Public;

    # Fichier à servir par défaut lorsque l'on accède à un répertoire.
    index index.php;

    # Configuration pour la gestion des logs.
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Bloc principal pour gérer toutes les requêtes entrantes.
    location / {
        # Tente de servir le fichier correspondant à l'URI demandée.
        # Si le fichier n'existe pas, il tente de servir le répertoire.
        # Si ni l'un ni l'autre n'existe, il passe la requête à index.php
        # en conservant les arguments de la requête. C'est la clé pour que votre routeur PHP fonctionne.
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Bloc spécifique pour traiter les fichiers PHP.
    location ~ \.php$ {
        # Vérifie que le script PHP existe avant de le passer à FPM.
        try_files $uri =404;

        # Inclusion des paramètres standard pour FastCGI.
        include fastcgi_params;

        # Définit l'adresse du service PHP-FPM. 'app' est le nom de votre service
        # dans docker-compose.yml, et 9000 est le port par défaut de PHP-FPM.
        fastcgi_pass app:9000;

        # Indique le nom du script à exécuter.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Indique le chemin du script.
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Bloc pour optimiser le service des fichiers statiques et empêcher leur exécution.
    location ~* \.(css|js|gif|ico|jpeg|jpg|png)$ {
        # Ajoute des en-têtes de cache pour améliorer les performances du navigateur.
        expires 1M;
        add_header Cache-Control "public";

        # Empêche l'enregistrement des accès pour ces fichiers pour alléger les logs.
        log_not_found off;

        # Interdit l'exécution de code dans ces fichiers.
        location ~ \.php$ {
            return 403;
        }
    }

    # Bloc pour interdire l'accès aux fichiers sensibles comme .htaccess.
    location ~ /\. {
        deny all;
    }
}

/***********************************************************************************
 * Fichier: docker\php\php.ini
 ***********************************************************************************/

[PHP]
display_errors = On
display_startup_errors = On
error_reporting = E_ALL
log_errors = On
error_log = /var/log/php_errors.log

[Date]
date.timezone = Europe/Paris

[Session]
session.save_handler = files
session.save_path = "/var/lib/php/sessions"
session.gc_probability = 1
session.gc_divisor = 1000
session.gc_maxlifetime = 3600

[Upload]
upload_max_filesize = 32M
post_max_size = 32M
max_file_uploads = 20

[Memory]
memory_limit = 256M

[Xdebug]
xdebug.mode = debug,develop
xdebug.start_with_request = yes
xdebug.client_host = host.docker.internal
xdebug.client_port = 9003
xdebug.log = /var/log/xdebug.log
